  # https://github.com/jonashackt/gitlab-ci-stack#which-one-to-choose
  # https://raw.githubusercontent.com/jonashackt/gitlab-ci-stack/master/gitlab-runner.yml
  # Install Gitlab Runner
  # see https://docs.gitlab.com/runner/install/linux-repository.html#installing-the-runner
  - name: Add the GitLab Runner package repository
    ansible.builtin.shell: "curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.deb.sh | sudo bash"

  # TODO docker install / install -> docker run
  #- name: Install GitLab Runner package
  #  apt:
  #    name: gitlab-runner
  #    state: latest
  - name: Run Gitlab Runner in docker container
    ansible.builtin.shell:
      "docker run -d --name gitlab-runner --restart always \
      -v /srv/gitlab-runner/config:/etc/gitlab-runner \
      -v /var/run/docker.sock:/var/run/docker.sock \
      gitlab/gitlab-runner:latest"

  # Register Gitlab Runner
  - name: Unregister all previously used Gitlab Runners
    ansible.builtin.shell: "gitlab-runner unregister --all-runners"

  - name: Add gitlab-runner user to docker group
    user:
      name: gitlab-runner
      groups: docker
      append: yes
    become: true


  # see https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-shell-executor
  # and this for non-interactive mode:
  # https://gitlab.com/gitlab-org/gitlab-runner/blob/master/docs/commands/README.md#non-interactive-registration
  #- name: Register Gitlab-Runners using shell executor
  #  ansible.builtin.shell: "gitlab-runner register --non-interactive --url '{{gitlab_url}}' --registration-token '{{gitlab_runner_registration_token}}' --description 'shell-runner-{{ item }}' --executor shell --tag-list shell"
  #  loop: "{{ range(1,gitlab_runner_count + 1)|list }}"

  # see https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-in-docker-workflow-with-docker-executor
  - name: Register Gitlab-Runners using docker executor for Docker-in-Docker
    ansible.builtin.shell: 
      "sudo gitlab-runner register \
      --non-interactive \
      --url '{{gitlab_url}}' \
      --registration-token '{{gitlab_runner_registration_token}}' \
      --executor docker \
      --docker-image latest \
      --docker-privileged \
      --description 'docker-runner'\
      --tag-list 'docker, CICD' \
      --run-untagged= 'true' \
      --locked= 'false' \
      --access-level= 'not_protected'"

  ## see https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-socket-binding
  #- name: Register Gitlab-Runners using docker executor for Docker socket binding
  #  ansible.builtin.shell: "gitlab-runner register --non-interactive --url '{{gitlab_url}}' --registration-token '{{gitlab_runner_registration_token}}' --description 'docker-socket-runner-{{ item }}' --executor docker --docker-image 'docker:stable' --docker-volumes /var/run/docker.sock:/var/run/docker.sock --tag-list socket"
  #  loop: "{{ range(1,gitlab_runner_count + 1)|list }}"


  # number of concurrent runners needs to be set directly in config-file in order to actually run jobs in parallel
  # see: https://gitlab.com/gitlab-org/gitlab-runner/issues/1539
  - name: set concurrent number of runners in gitlab-runner config
    ini_file:
      path: /etc/gitlab-runner/config.toml
      section: 
      option: concurrent
      value: "{{ gitlab_runner_count }}"

  - name: Retrieve all registered Gitlab Runners
    ansible.builtin.shell: "gitlab-runner list"
    register: runner_result

  - name: Show all registered Gitlab Runners
    debug:
      msg:
       - "{{runner_result.stderr_lines}}"